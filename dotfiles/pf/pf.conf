# Default PF configuration file.
#
# This file contains the main ruleset, which gets automatically loaded
# at startup.  PF will not be automatically enabled, however.  Instead,
# each component which utilizes PF is responsible for enabling and disabling
# PF via -E and -X as documented in pfctl(8).  That will ensure that PF
# is disabled only when the last enable reference is released.
#
# Care must be taken to ensure that the main ruleset does not get flushed,
# as the nested anchors rely on the anchor point defined here. In addition,
# to the anchors loaded by this file, some system services would dynamically 
# insert anchors into the main ruleset. These anchors will be added only when
# the system service is used and would removed on termination of the service.
#
# See pf.conf(5) for syntax.
#
# com.apple anchor point
#
#scrub-anchor "com.apple/*"
#nat-anchor "com.apple/*"
#rdr-anchor "com.apple/*"
#dummynet-anchor "com.apple/*"
#anchor "com.apple/*"
#load anchor "com.apple" from "/etc/pf.anchors/com.apple"

# MACROS
wifi = "en1"

# TABLES
# to add a host
# pfctl -t badguys -T add <IPADDRESS>
table <badguys> persist
table <goodguys> persist

# OPTIONS
# define os fingerprints
set block-policy return
set fingerprints "/etc/pf.os"

# always allow internal traffic
set skip on lo

# only log wifi
set loginterface $wifi

# NORMALIZATION
# clean everything up
scrub in all no-df

# QUEUEING
# TRANSLATION

# FILTERING
# block all the things on wifi!
block log on $wifi all

# block to/from illegal destinations/sources
 block in log quick on $wifi from no-route to any

# allow critical system traffic
pass in quick inet proto udp from any port 67 to any port 68

# allow good places everything, if you want
pass in on $wifi from {<goodguys>} to any

# Incoming ssh, http, https
pass in on $wifi proto { tcp udp } from any to any port { 80 443 22 }

# allow some outgoing traffic
pass out on $wifi proto { tcp udp } from any to any port { 80 443 22 } 

# block jerks
block on $wifi from {<badguys>} to any

# DON'T TOUCH THIS COMMENT! pf.conf must have a return line at eof to work

# action [direction] [log] [quick] [on interface] [af] [proto protocol]
#        [from src_addr [port src_port]] [to dst_addr [port dst_port]]
#        [flags tcp_flags] [state]
#
# NIST guidlines
#
# # FTP incoming
# block in proto { tcp udp } to any port { 20 21 }
# # SSH incoming
#  block in proto { tcp udp } to any port 22
# # telnet incoming
# block in proto { tcp udp } to any port 23
# # rexec both
# block proto { tcp udp } to any port 512
# # RSH both
# block proto { tcp udp } to any port 514
# # TFTP both
# block proto { tcp udp } to any port 69
# # finger both
# block proto tcp to any port 79
# # HTTP incoming
# block in proto { tcp udp } to any port 80
# # NFS both
# block proto tcp to any port 2049
# # remote apple events incoming
# block in proto tcp to any port 3031
# # SMB both
# block proto tcp to any port { 139, 445}
# block proto udp to any port { 137, 138}
# # Apple file server incoming
# block in proto tcp to any port 548
# # UUCP both
# block proto tcp to any port 540
# # Screen Sharing incoming
# block in proto tcp to any port 5900
# # ICMP both
# block proto { tcp udp } to any port 7
# # SMTP incoming
# block in proto tcp to any port 25
# # POP3 incoming
# block in proto tcp to any port 110
# # POP3S incoming
# block in proto tcp to any port 995
# # SFTP incoming
# block in proto tcp to any port 115
# # IMAP incoming
# block in proto tcp to any port 143
# # IMAPS incoming
# block in proto tcp to any port 993
# # Printer Sharing incoming
# block in proto tcp to any port 631
# # Bonjour both
# block proto udp to any port 1900
# # mDNSResponder both
# block proto udp to any port 5353
# #iTunes sharing both
# block proto tcp to any port 3689
# # optical drive sharing both
# block proto tcp to any port 49152









